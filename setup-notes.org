* create image with glance

#+BEGIN_SRC sh
glance image-create --name CoreOS --container-format bare --disk-format qcow2 --file coreos_production_openstack_image.img --is-public True
#+END_SRC

be sure to =source= the =pt-8681-openrc.sh= script to setup the
openstack credentials

* public key auth

#+BEGIN_SRC sh
ssh-keygen -t rsa -f ~/.ssh/extempore
nova keypair-add --pub_key ~/.ssh/extempore.pub extempore
#+END_SRC

* openstack security groups

** coreos group

#+BEGIN_SRC sh
# nova secgroup-add-rule default icmp -1 -1 0.0.0.0/0     # ping - should this be /24 ?
nova secgroup-add-rule default tcp 22 22 0.0.0.0/0      # ssh - should this be /24 ?
#+END_SRC


#+BEGIN_SRC sh
nova secgroup-create coreos "CoreOS: etcd & fleet"
nova secgroup-add-rule coreos tcp 4001 4001 0.0.0.0/0  # etcd
nova secgroup-add-rule coreos tcp 7001 7001 0.0.0.0/0  # fleet
nova secgroup-add-rule coreos tcp 5000 5000 0.0.0.0/0  # docker registry (private)
#+END_SRC

** extempore group

#+BEGIN_SRC sh
nova secgroup-create extempore "Security group settings for Extempore"
nova secgroup-add-rule extempore tcp 7099 7099 0.0.0.0/0  # extempore primary process
nova secgroup-add-rule extempore tcp 7098 7098 0.0.0.0/0  # extempore utility process
#+END_SRC

also, look into =nova secgroup-add-group-rule= for dynamic group
allocation of rules (or something).

* boot cluster

#+BEGIN_SRC sh
nova boot --user-data ./cloud-config.yaml --key-name extempore --image <image-id> --flavor m1.small --num-instances 2 --security-groups default,extempore coreos
#+END_SRC

not sure if the =coreos= name at the end of that command works when
spinning up multiple instances---do they get uniquified?

* controlling the cluster

** fleetctl tunnel

#+BEGIN_SRC sh
export FLEETCTL_TUNNEL=<ip-of-any-node>
#+END_SRC

